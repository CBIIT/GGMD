fsitgl-hpc010p
/mnt/projects/ATOM/blackst/FNLGMD/source
Before
Pre-imports
Outside functions
THIS IS A TEST: Commented out decoder AND optimizer call in gen_net.py optimize
Before parser
args:  Namespace(compound_count=0, config=['/mnt/projects/ATOM/blackst/FNLGMD/workspace/example_dir/config.yaml'], gene_mutate_prob=0.1, ind_mutate_prob=0.1, mate_prob=0.3, max_clones=1, max_population=0, memetic_delta=1, memetic_delta_scale=1, memetic_frac=0.4, memetic_size=25, model_path='/mnt/projects/ATOM/blackst/GMD/LOGP-JTVAE-PAPER/Train/MODEL-TRAIN/model.epoch-35', model_type='jtnn-fnl', mutate_std=1, num_epochs=1, optimization='minimize', optimizer_type='geneticoptimizer', output_directory='/mnt/projects/ATOM/blackst/FNLGMD/workspace/example_dir/', scorer_type='FNL', selection_type='tournament', smiles_input_file='/mnt/projects/ATOM/blackst/GMD/LOGP-JTVAE-PAPER/Raw-Data/ZINC/all.txt', tourn_size=25, verbose='True', vocab_path='/mnt/projects/ATOM/blackst/GMD/LOGP-JTVAE-PAPER/Vocabulary/all_vocab.txt')
classes initialized
50  compounds in the df
population initialized
Population evaluated
epoch #0
Inside loop
Entering optimizing
Encoding
1  batches of smiles
1
encoded returned
Encoding computation time, Total time = 1, 1 seconds
<class 'numpy.ndarray'>
<class 'numpy.ndarray'>
Optimizing
latent_optimizer population_size: 50, latent_cost_df size: 50, retained_df size: 0, target population size: 249456
After optimization, population columns are compound_id, smiles, latent, cost, parent1_id, parent2_id
After optimization: retained population 13, total population 74855
Decoding  74855  molecules
Traceback (most recent call last):
  File "/mnt/projects/ATOM/blackst/FNLGMD/source/main.py", line 73, in <module>
    main()
  File "/mnt/projects/ATOM/blackst/FNLGMD/source/main.py", line 57, in main
    population = generative_model.optimize(population) #TEMP COMMENT
  File "/mnt/projects/ATOM/blackst/FNLGMD/source/generative_network.py", line 183, in optimize
    assert len(smiles) == len(latent)
AssertionError
After
